name: Build OpenSSL for Termux

on:
  workflow_call:
    inputs:
      version:
        description: 'OpenSSL version'
        required: false
        default: '3.4.1'
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenSSL version'
        required: false
        default: '3.4.1'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armeabi-v7a, arm64-v8a, x86, x86_64]
        include:
          - arch: armeabi-v7a
            triple: armv7a-linux-androideabi
            abi: armeabi-v7a
            host: arm-linux-androideabi
          - arch: arm64-v8a
            triple: aarch64-linux-android
            abi: arm64-v8a
            host: aarch64-linux-android
          - arch: x86
            triple: i686-linux-android
            abi: x86
            host: i686-linux-android
          - arch: x86_64
            triple: x86_64-linux-android
            abi: x86_64
            host: x86_64-linux-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
          add-to-path: true

      - name: Download OpenSSL
        run: |
          curl -LO https://www.openssl.org/source/openssl-${{ inputs.version }}.tar.gz
          tar -xf openssl-${{ inputs.version }}.tar.gz
          mv openssl-${{ inputs.version }} openssl

      - name: Set env
        run: |
          echo "API=24" >> $GITHUB_ENV
          echo "TOOLCHAIN=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64" >> $GITHUB_ENV
          echo "PATH=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH" >> $GITHUB_ENV

      - name: Configure and build OpenSSL
        working-directory: ./openssl
        env:
          ANDROID_NDK: ${{ env.ANDROID_NDK }}
        run: |
          export PATH="$TOOLCHAIN/bin:$PATH"
          export CC=${{ matrix.triple }}${API}-clang
          export AR=${{ matrix.host }}-ar
          export AS=${{ matrix.host }}-as
          export LD=${{ matrix.host }}-ld
          export RANLIB=${{ matrix.host }}-ranlib
          export STRIP=${{ matrix.host }}-strip

          case ${{ matrix.abi }} in
            armeabi-v7a)
              CONFIGURE_TARGET=android-arm;;
            arm64-v8a)
              CONFIGURE_TARGET=android-arm64;;
            x86)
              CONFIGURE_TARGET=android-x86;;
            x86_64)
              CONFIGURE_TARGET=android-x86_64;;
          esac

          ./Configure $CONFIGURE_TARGET no-shared no-unit-test --prefix=$PWD/build/${{ matrix.abi }}
          make -j$(nproc)
          make install_sw

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openssl-${{ matrix.abi }}
          path: openssl/build/${{ matrix.abi }}
      - name: Check
        run: tree -a
